<?xml version="1.0"?>

<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="activerecord"
             type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord" />
  </configSections>

  <system.serviceModel>
    <bindings />
    <behaviors>
      <serviceBehaviors>
        <behavior name="ReverseIndexServiceBehavior">
          <serviceMetadata httpGetEnabled="True" policyVersion="Policy15" />
          <serviceDiscovery>
            <announcementEndpoints>
              <endpoint kind="udpAnnouncementEndpoint" />
            </announcementEndpoints>
          </serviceDiscovery>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <services>
      <service behaviorConfiguration="ReverseIndexServiceBehavior" name="DHT.MainModule.ReverseIndexServiceContract">
        <endpoint address="ReverseIndex" binding="basicHttpBinding" bindingConfiguration="" name="basic"
                  contract="DHT.MainModule.IReverseIndexServiceContract" />
        <endpoint address="mex" binding="mexHttpBinding" name="mex" contract="IMetadataExchange" />
        <!-- Discovery Endpoints -->
        <endpoint kind="udpDiscoveryEndpoint" />

        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8020/" />
          </baseAddresses>
        </host>
      </service>

      <service behaviorConfiguration="ReverseIndexServiceBehavior" name="DHT.MainModule.FileToMachineServiceContract">
        <endpoint address="File" binding="basicHttpBinding" bindingConfiguration="" name="basic"
                  contract="DHT.MainModule.IFileToMachineServiceContract" />
        <endpoint address="mex" binding="mexHttpBinding" name="mex" contract="IMetadataExchange" />
        <!-- Discovery Endpoints -->
        <endpoint kind="udpDiscoveryEndpoint" />

        <host>
          <baseAddresses>
            <add baseAddress="http://localhost:8021/" />
          </baseAddresses>
        </host>
      </service>
      
      <!-- Announcement Listener Configuration -->
      <service name="AnnouncementListener">
        <endpoint kind="udpAnnouncementEndpoint" />
      </service>
    </services>
    <client>
      <endpoint address="http://localhost:8020/ReverseIndex" binding="basicHttpBinding"
                contract="DHT.MainModule.IReverseIndexServiceContract" />
    </client>
  </system.serviceModel>

  <log4net>
    <root>
      <level value="ALL" />
      <appender-ref ref="LogFileAppender" />
    </root>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <param name="File" value=".\Logs\Log.txt" />
      <param name="AppendToFile" value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="2" />
      <maximumFileSize value="100KB" />
      <staticLogFileName value="true" />
      <datePattern value="yyyyMMdd" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <logger name="NHibernate" additivity="false">
      <level value="INFO" />
      <appender-ref ref="FileAppender" />
    </logger>
  </log4net>

  <!--  <connectionStrings>-->
  <!--    <add name="main" connectionString="Data Source=DataBase\Database.s3db;Version=3"/>-->
  <!--  </connectionStrings>-->
  <activerecord pluralizeTableNames="true">
    <config>
      <add key="connection.driver_class" value="NHibernate.Driver.SQLite20Driver" />
      <add key="dialect" value="NHibernate.Dialect.SQLiteDialect" />
      <add key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider" />
      
      <!--      <add key="connection.connection_string_name" value="main" />-->
      <add key="connection.connection_string" value="Data Source=Database.s3db;Version=3" />

      <add key="query.substitutions" value="true=1;false=0" />
      <add key="proxyfactory.factory_class"
           value="NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle" />
      <add key="show_sql" value="true" />
    </config>
  </activerecord>
</configuration>